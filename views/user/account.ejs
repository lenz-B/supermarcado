<%- include('../layout/header.ejs') %>

    <style>
        .error {
            color: red;
            display: none;
        }
        .btn-wrapper a {
            margin-right: 15px;
        }
        .btn-wrapper i {
            margin-right: 5px;
        }

        /* .add-address {
            display: inline-block;
            padding: 10px 20px;
            margin-top: 20px;
            background-color: #28a745;
            color: #fff;
            border: none;
            border-radius: 5px;
            text-decoration: none;
            font-size: 16px;
            cursor: pointer;
        } */
    </style>
    
    <div class="ltn__utilize-overlay"></div>

    <!-- BREADCRUMB AREA START -->
    <div class="ltn__breadcrumb-area ltn__breadcrumb-area-2 ltn__breadcrumb-color-white bg-overlay-theme-black-90 bg-image" data-bg="img/bg/9.jpg">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="ltn__breadcrumb-inner ltn__breadcrumb-inner-2 justify-content-between">
                        <div class="section-title-area ltn__section-title-2">
                            <h1 class="section-title white-color">My Account</h1>
                        </div>
                        <div class="ltn__breadcrumb-list">
                            <ul>
                                <li><a href="/">Home</a></li>
                                <li>My Account</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- BREADCRUMB AREA END -->

    <!-- WISHLIST AREA START -->
    <div class="liton__wishlist-area pb-70">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <!-- PRODUCT TAB AREA START -->
                    <div class="ltn__product-tab-area">
                        <div class="container">
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="ltn__tab-menu-list mb-50">
                                        <div class="nav">
                                            <a class="active show" data-bs-toggle="tab" href="#liton_tab_1_1">Dashboard <i class="fas fa-home"></i></a>
                                            <a data-bs-toggle="tab" href="#liton_tab_1_5">Account Details <i class="fas fa-user"></i></a>
                                            <a data-bs-toggle="tab" href="#liton_tab_1_2">Orders <i class="fas fa-file-alt"></i></a>
                                            <!-- <a data-bs-toggle="tab" href="#liton_tab_1_3">Downloads <i class="fas fa-arrow-down"></i></a> -->
                                            <a data-bs-toggle="tab" href="#liton_tab_1_4">address <i class="fas fa-map-marker-alt"></i></a>
                                            <a href="" onclick="data(event)">Logout <i class="fas fa-sign-out-alt"></i></a>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-8">
                                    <div class="tab-content">
                                        <div class="tab-pane fade active show" id="liton_tab_1_1">
                                            <div class="ltn__myaccount-tab-content-inner">
                                                <p>Hello <strong><%= user.username %></strong></p>
                                                <!-- (not <strong><%= user.username %></strong>? <small><a href="/" onclick="data(event)">Log out</a></small> ) -->
                                                <p>From your account dashboard you can view your <span>recent orders</span>, manage your <span>shipping and billing addresses</span>, and <span>edit your password and account details</span>.</p>
                                            </div>
                                        </div>
                                        <div class="tab-pane fade" id="liton_tab_1_2">
                                            <div class="ltn__myaccount-tab-content-inner">
                                                <div class="table-responsive">
                                                    <table class="table">
                                                      <thead>
                                                        <tr>
                                                          <th>Order</th>
                                                          <th>Date</th>
                                                          <th>Status</th>
                                                          <th>Total</th>
                                                          <th>Action</th>
                                                        </tr>
                                                      </thead>
                                                      <tbody>
                                                        <% orderData.forEach((order, index) => { %>
                                                          <tr>
                                                            <td><%= index + 1 %></td>
                                                            <td><%= new Date(order.date).toLocaleDateString() %></td>
                                                            <td><%= order.orderStatus %></td>
                                                            <td>$<%= order.totalAmount.toFixed(2) %></td>
                                                            <td><a href="javascript:void(0);" onclick="showOrderDetails('<%= order._id %>')">View</a></td>
                                                          </tr>
                                                          <tr id="order-details-<%= order._id %>" style="display: none;">
                                                            <td colspan="5">
                                                              <div class="table-responsive">
                                                                <table class="table">
                                                                  <tbody>
                                                                    <% order.orderedItems.forEach(item => { %>
                                                                      <tr>
                                                                        <td><%= item.product_id.name %> <strong>Ã— <%= item.quantity %></strong></td>
                                                                        <td>$<%= item.product_id.price * item.quantity %></td>
                                                                      </tr>
                                                                    <% }); %>
                                                                    <tr>
                                                                      <td>Shipping and Handling</td>
                                                                      <td>$15.00</td>
                                                                    </tr>
                                                                    <tr>
                                                                      <td>Vat</td>
                                                                      <td>$0.00</td>
                                                                    </tr>
                                                                    <tr>
                                                                      <td><strong>Order Total</strong></td>
                                                                      <td><strong>$<%= order.totalAmount %></strong></td>
                                                                    </tr>
                                                                    <tr>
                                                                      <td colspan="2">
                                                                        <% if (order.orderStatus !== 'Cancelled') { %>
                                                                          <button onclick="cancelOrder('<%= order._id %>')">Cancel Order</button>
                                                                        <% } else { %>
                                                                          <strong>Order Cancelled</strong>
                                                                        <% } %>
                                                                      </td>
                                                                    </tr>
                                                                  </tbody>
                                                                </table>
                                                              </div>
                                                            </td>
                                                          </tr>
                                                        <% }) %>
                                                      </tbody>
                                                    </table>
                                                  </div>
                                            </div>
                                        </div>
                                        <script>
                                            function showOrderDetails(orderId) {
                                              var detailsRow = document.getElementById('order-details-' + orderId);
                                              if (detailsRow.style.display === 'none') {
                                                detailsRow.style.display = '';
                                              } else {
                                                detailsRow.style.display = 'none';
                                              }
                                            }
                                          
                                            function cancelOrder(orderId) {
    Swal.fire({
      title: 'Are you sure?',
      text: "You won't be able to revert this!",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#28a745',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Yes, cancel it!'
    }).then((result) => {
      if (result.isConfirmed) {
        fetch('/cancel-order', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ orderId: orderId })
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            Swal.fire({
              title: 'Cancelled!',
              text: 'Your order has been cancelled.',
              icon: 'success',
              confirmButtonColor: '#28a745'
            }).then(() => {
              location.reload(); // Reload the page to reflect changes
            });
          } else {
            Swal.fire({
              title: 'Error!',
              text: 'Failed to cancel the order.',
              icon: 'error',
              confirmButtonColor: '#28a745'
            });
          }
        })
        .catch(error => {
          console.error('Error cancelling order:', error);
          Swal.fire({
            title: 'Error!',
            text: 'Failed to cancel the order.',
            icon: 'error',
            confirmButtonColor: '#28a745'
          });
        });
      }
    });
  }
                                          </script>
                                        <div class="tab-pane fade" id="liton_tab_1_4">
                                            <div class="ltn__myaccount-tab-content-inner">
                                                <p>The following addresses will be used on the checkout page by default.</p>
                                                <div class="row">
                                                    <% for (var i = 0; i < addressData.user_address.length; i++) { %>
                                                        <div class="col-md-6 col-12 learts-mb-30">
                                                            <h4>
                                                                <%= i === 0 ? "Billing Address" : "Shipping Address" %>
                                                            </h4>
                                                            <address>
                                                                <p><strong><%= addressData.user_address[i].name %></strong></p>
                                                                <p>
                                                                    <%= addressData.user_address[i].address %> <br>
                                                                    <%= addressData.user_address[i].city %>, <%= addressData.user_address[i].state %> <br>
                                                                    PIN: <%= addressData.user_address[i].pin %>
                                                                </p>
                                                                <p>Email: <%= addressData.user_address[i].email %> <br>
                                                                    Mobile: <%= addressData.user_address[i].mobile %></p>
                                                            </address>
                                                            <div class="btn-wrapper nav">
                                                                <p>
                                                                    <a data-bs-toggle="tab" href="#liton_tab_1_3_<%= i %>"><i class="fas fa-edit"></i> Edit</a>
                                                                    <a href="#" onclick="deleteAddress('<%= i %>')"><i class="fas fa-trash"></i> Delete</a>
                                                                </p>
                                                            </div>
                                                        </div>
                                                    <% } %>
                                                </div>
                                                <a href="#" class="add-address" onclick="showAddressForm()"><i class="fas fa-plus"></i> Add Address</a>
                                            </div>
                                        </div>
                                        
                                        <% for (var i = 0; i < addressData.user_address.length; i++) { %>
                                            <div class="tab-pane fade" id="liton_tab_1_3_<%= i %>">
                                                <div class="ltn__myaccount-tab-content-inner">
                                                    <div class="ltn__form-box">
                                                        <form id="userForm_<%= i %>" action="#">
                                                            <div class="row mb-50">
                                                                <div id="message-container"></div>
                                                                <div class="col-md-6">
                                                                    <label>Name:</label>
                                                                    <input type="text" id="name_<%= i %>" name="name" value="<%= addressData.user_address[i].name %>" required>
                                                                    <span class="error" id="nameError_<%= i %>">Name must be at least 3 letters and only alphabets.</span>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <label>Email:</label>
                                                                    <input type="email" id="email_<%= i %>" name="email" value="<%= addressData.user_address[i].email %>" required>
                                                                    <span class="error" id="emailError_<%= i %>">Enter a valid email address.</span>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <label>Mobile:</label>
                                                                    <input type="text" id="mobile_<%= i %>" name="mobile" value="<%= addressData.user_address[i].mobile %>" required>
                                                                    <span class="error" id="mobileError_<%= i %>">Enter a valid phone number.</span>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <label>Address:</label>
                                                                    <textarea id="address_<%= i %>" name="address" rows="4" required><%= addressData.user_address[i].address %></textarea>
                                                                    <span class="error" id="addressError_<%= i %>">Enter a valid address.</span>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <label>City:</label>
                                                                    <input type="text" id="city_<%= i %>" name="city" value="<%= addressData.user_address[i].city %>" required>
                                                                    <span class="error" id="cityError_<%= i %>">Enter a valid city.</span>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <label>State:</label>
                                                                    <input type="text" id="state_<%= i %>" name="state" value="<%= addressData.user_address[i].state %>" required>
                                                                    <span class="error" id="stateError_<%= i %>">Enter a valid state.</span>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <label>PIN:</label>
                                                                    <input type="text" id="pin_<%= i %>" name="pin" value="<%= addressData.user_address[i].pin %>" required>
                                                                    <span class="error" id="pinError_<%= i %>">Enter a valid PIN number.</span>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <div style="display: flex; gap: 10px;">
                                                                        <label><input type="radio" name="addressType_<%= i %>" value="is_home" id="isHome_<%= i %>" required> Home</label>
                                                                        <label><input type="radio" name="addressType_<%= i %>" value="is_work" id="isWork_<%= i %>" required> Work</label>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="btn-wrapper">
                                                                <button type="submit" id="submitButton_<%= i %>" class="btn theme-btn-1 btn-effect-1 text-uppercase">Save Changes</button>
                                                                <!-- Cancel button -->
                                                                <a data-bs-toggle="tab" href="#liton_tab_1_4" class="btn theme-btn-1 btn-effect-1 text-uppercase nav">Cancel</a>
                                                            </div>
                                                        </form>
                                                    </div>
                                                </div>
                                            </div>
                                        <% } %>
                                        
                                        <div class="tab-pane fade" id="liton_tab_1_5">
                                            <div class="ltn__myaccount-tab-content-inner">
                                                <p>The following addresses will be used on the checkout page by default.</p>
                                                <div class="ltn__form-box">
                                                    <form id="userForm" action="#">
                                                        <div class="row mb-50">
                                                            <div id="message-container"></div>
                                                            <div class="col-md-6">
                                                                <label>First name:</label>
                                                                <input type="text" id="fname" name="fname" value="<%= user.fname %>" required>
                                                                <span class="error" id="fnameError">First name must be at least 3 letters and only alphabets.</span>
                                                            </div>
                                                            <div class="col-md-6">
                                                                <label>Last name:</label>
                                                                <input type="text" id="lname" name="lname" value="<%= user.lname %>" required>
                                                                <span class="error" id="lnameError">Last name must be at least 1 letter and only alphabets.</span>
                                                            </div>
                                                            <div class="col-md-6">
                                                                <label>Username:</label>
                                                                <input type="text" id="username" name="username" value="<%= user.username %>" required>
                                                                <span class="error" id="usernameError">Username can only contain letters, numbers, spaces, and underscores.</span>
                                                            </div>
                                                            <div class="col-md-6">
                                                                <label>Phone Number:</label>
                                                                <input type="text" id="phone" name="phone" value="<%= user.phone %>" required>
                                                                <span class="error" id="phoneError">Enter a valid phone number.</span>
                                                            </div>
                                                        </div>
                                                        <legend>Change Password</legend>
                                                        <fieldset>
                                                            <div class="row">
                                                                <div class="col-md-12">
                                                                    <label>Current password (leave blank to leave unchanged):</label>
                                                                    <input type="password" id="password" name="password">
                                                                    <label>New password (leave blank to leave unchanged):</label>
                                                                    <input type="password" id="newPassword" name="newPassword">
                                                                    <label>Confirm new password:</label>
                                                                    <input type="password" id="confirmPassword" name="confirmPassword">
                                                                    <span class="error" id="passwordError">New passwords do not match.</span>
                                                                </div>
                                                            </div>
                                                        </fieldset>
                                                        <div class="btn-wrapper">
                                                            <button type="submit" id="submitButton" class="btn theme-btn-1 btn-effect-1 text-uppercase">Save Changes</button>
                                                        </div>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- PRODUCT TAB AREA END -->
                </div>
            </div>
        </div>
    </div>
    <!-- WISHLIST AREA START -->

    <!-- FEATURE AREA START ( Feature - 3) -->
    <div class="ltn__feature-area before-bg-bottom-2 mb--30--- plr--5">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-12">
                    <div class="ltn__feature-item-box-wrap ltn__border-between-column white-bg">
                        <div class="row">
                            <div class="col-xl-3 col-md-6 col-12">
                                <div class="ltn__feature-item ltn__feature-item-8">
                                    <div class="ltn__feature-icon">
                                        <img src="img/icons/icon-img/11.png" alt="#">
                                    </div>
                                    <div class="ltn__feature-info">
                                        <h4>Curated Products</h4>
                                        <p>Provide Curated Products for
                                            all product over $100</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xl-3 col-md-6 col-12">
                                <div class="ltn__feature-item ltn__feature-item-8">
                                    <div class="ltn__feature-icon">
                                        <img src="img/icons/icon-img/12.png" alt="#">
                                    </div>
                                    <div class="ltn__feature-info">
                                        <h4>Handmade</h4>
                                        <p>We ensure the product quality
                                            that is our main goal</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xl-3 col-md-6 col-12">
                                <div class="ltn__feature-item ltn__feature-item-8">
                                    <div class="ltn__feature-icon">
                                        <img src="img/icons/icon-img/13.png" alt="#">
                                    </div>
                                    <div class="ltn__feature-info">
                                        <h4>Natural Food</h4>
                                        <p>Return product within 3 days
                                            for any product you buy</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xl-3 col-md-6 col-12">
                                <div class="ltn__feature-item ltn__feature-item-8">
                                    <div class="ltn__feature-icon">
                                        <img src="img/icons/icon-img/14.png" alt="#">
                                    </div>
                                    <div class="ltn__feature-info">
                                        <h4>Free home delivery</h4>
                                        <p>We ensure the product quality
                                            that you can trust easily</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- FEATURE AREA END -->

 <!-- footer -->
 <%- include('../layout/footer.ejs') %>
</div>
<!-- Body main wrapper end -->

    <!-- All JS Plugins -->
    <script src="js/plugins.js"></script>
    <!-- Main JS -->
    <script src="js/main.js"></script>

    <script>
        function data(event){
            event.preventDefault()
            fetch('/logout',{
                method:'DELETE'
            }).then(res=>res.json()).then(data=>{
                if(data)window.location='/'
            })
        }
    </script>
    <!-- efit profile  -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const fname = document.getElementById('fname');
            const lname = document.getElementById('lname');
            const username = document.getElementById('username');
            const phone = document.getElementById('phone');
            const password = document.getElementById('password');
            const newPassword = document.getElementById('newPassword');
            const confirmPassword = document.getElementById('confirmPassword');

            const submitButton = document.getElementById('submitButton');
            const messageContainer = document.getElementById('message-container');

            const fnameError = document.getElementById('fnameError');
            const lnameError = document.getElementById('lnameError');
            const usernameError = document.getElementById('usernameError');
            const phoneError = document.getElementById('phoneError');
            const passwordError = document.getElementById('passwordError');

            // Store initial values
            const initialValues = {
                fname: fname.value.trim(),
                lname: lname.value.trim(),
                username: username.value.trim(),
                phone: phone.value.trim(),
                newPassword: newPassword.value,
                confirmPassword: confirmPassword.value
            };

            fname.addEventListener('keyup', () => validateFname(true));
            lname.addEventListener('keyup', () => validateLname(true));
            username.addEventListener('keyup', () => validateUsername(true));
            phone.addEventListener('keyup', () => validatePhone(true));
            confirmPassword.addEventListener('keyup', () => validatePasswordMatch(true));

            function validateFname(showError) {
                const regex = /^[A-Za-z]{3,}(?: [A-Za-z]+)*$/;
                if (showError) {
                    fname.value = fname.value.trim();
                    fnameError.style.display = regex.test(fname.value) ? 'none' : 'inline';
                    checkFormValidity();
                }
            }

            function validateLname(showError) {
                const regex = /^[A-Za-z]+(?: [A-Za-z]+)*$/;
                if (showError) {
                    lname.value = lname.value.trim();
                    lnameError.style.display = regex.test(lname.value) ? 'none' : 'inline';
                    checkFormValidity();
                }
            }

            function validateUsername(showError) {
                const regex = /^[a-zA-Z0-9_\s]+$/;
                if (showError) {
                    username.value = username.value.trim();
                    usernameError.style.display = regex.test(username.value) ? 'none' : 'inline';
                    checkFormValidity();
                }
            }

            function validatePhone(showError) {
                const regex = /^(?!.*(\d)\1{9})\d{10}$/;
                if (showError) {
                    phone.value = phone.value.trim();
                    phoneError.style.display = regex.test(phone.value) ? 'none' : 'inline';
                    checkFormValidity();
                }
            }

            function validatePasswordMatch(showError) {
                if (showError && newPassword.value && confirmPassword.value) {
                    passwordError.style.display = newPassword.value === confirmPassword.value ? 'none' : 'inline';
                } else {
                    passwordError.style.display = 'none';
                }
                checkFormValidity();
            }

            function checkFormValidity() {
                const currentValues = {
                    fname: fname.value.trim(),
                    lname: lname.value.trim(),
                    username: username.value.trim(),
                    phone: phone.value.trim(),
                    newPassword: newPassword.value,
                    confirmPassword: confirmPassword.value
                };

                const hasChanges = Object.keys(initialValues).some(key => initialValues[key] !== currentValues[key]);

                submitButton.disabled = !hasChanges || hasErrors();
            }

            function hasErrors() {
                const errors = [
                    fnameError.style.display,
                    lnameError.style.display,
                    usernameError.style.display,
                    phoneError.style.display,
                    passwordError.style.display
                ];
                return errors.some(error => error === 'inline');
            }

            document.getElementById('userForm').addEventListener('submit', async function(event) {
                event.preventDefault();
                messageContainer.innerHTML = '';

                const form = document.getElementById('userForm');
                const formData = new FormData(form);
                
                // Convert FormData to plain object
                const formObj = Object.fromEntries(formData.entries());

                fetch('/user-profile-update', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formObj)
                })
                .then(res => res.json())
                .then(data => {
                    if (data.status) {
                        Swal.fire({
                            title: 'Updated!',
                            text: data.message,
                            icon: 'success',
                            timer: 3000,
                            showConfirmButton: true,
                            confirmButtonColor: '#28a745' // green
                        }).then((result) => {
                            if (result.isConfirmed || result.dismiss === Swal.DismissReason.timer) {
                                window.location.href = '/my-account';
                            }
                        });
                    } else {
                        showMessage(data.message, 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showMessage('An error occurred while updating the profile', 'error');
                });

                function showMessage(message, type) {
                    const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
                    messageContainer.innerHTML = `<div class="alert ${alertClass}">${message}</div>`;
                }
            });

            checkFormValidity();
        });
    </script>
    <!-- add address -->
    <script>
       function showAddressForm() {
            Swal.fire({
                title: 'Add Address',
                html: `
                    <form id="addressForm" class="swal2-form" style="display: flex; flex-direction: column; gap: 15px;">
                        <input type="text" id="name" class="swal2-input" placeholder="Name" required style="padding: 10px;">
                        <input type="email" id="email" class="swal2-input" placeholder="Email" required style="padding: 10px;">
                        <input type="tel" id="mobile" class="swal2-input" placeholder="Mobile" pattern="[0-9]{10}" required style="padding: 10px;">
                        <input type="text" id="pin" class="swal2-input" placeholder="PIN" pattern="[0-9]{6}" required style="padding: 10px;">
                        <textarea id="address" class="swal2-textarea" placeholder="Address" required style="padding: 10px;"></textarea>
                        <input type="text" id="city" class="swal2-input" placeholder="City" required style="padding: 10px;">
                        <input type="text" id="state" class="swal2-input" placeholder="State" required style="padding: 10px;">
                        <div style="display: flex; gap: 10px;">
                            <label><input type="radio" name="addressType" value="is_home" id="isHome" class="swal2-radio" required> Home</label>
                            <label><input type="radio" name="addressType" value="is_work" id="isWork" class="swal2-radio" required> Work</label>
                        </div>
                    </form>
                `,
                showCancelButton: true,
                confirmButtonText: 'Add',
                cancelButtonText: 'Cancel',
                focusConfirm: false,
                allowOutsideClick: false,
                preConfirm: () => {
                    const form = document.getElementById('addressForm');

                    const name = form.name.value.trim();
                    const email = form.email.value.trim();
                    const mobile = form.mobile.value.trim();
                    const pin = form.pin.value.trim();
                    const address = form.address.value.trim();
                    const city = form.city.value.trim();
                    const state = form.state.value.trim();
                    const addressType = form.addressType.value;

                    if (!name || !email || !mobile || !pin || !address || !city || !state || !addressType) {
                        Swal.showValidationMessage('Please fill in all required fields.');
                        return false;
                    }

                    if (!/^[a-zA-Z\s]+$/.test(name)) {
                        Swal.showValidationMessage('Name can only contain letters and spaces.');
                        return false;
                    }

                    if (!/\S+@\S+\.\S+/.test(email)) {
                        Swal.showValidationMessage('Please enter a valid email address.');
                        return false;
                    }

                    if (!/^\d{10}$/.test(mobile)) {
                        Swal.showValidationMessage('Mobile number must be 10 digits.');
                        return false;
                    }

                    if (!/^\d{6}$/.test(pin)) {
                        Swal.showValidationMessage('PIN must be 6 digits.');
                        return false;
                    }

                    const formData = {
                        name,
                        email,
                        mobile,
                        pin,
                        address,
                        city,
                        state,
                        is_Home: addressType === 'is_home',
                        is_Work: addressType === 'is_work'
                    };

                    return fetch('/add-address', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(formData)
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.status) {
                            Swal.fire({
                                title: 'Updated Successfully!',
                                text: data.message,
                                icon: 'success',
                                timer: 3000,
                                showConfirmButton: true,
                                confirmButtonColor: '#28a745' // green
                            })
                        } else {
                            Swal.fire({
                                title: 'Update Failed',
                                text: data.message,
                                icon: 'error',
                                confirmButtonColor: '#d33' // red
                            })
                        }
                    })
                    .catch(error => {
                        Swal.showValidationMessage(error.message);
                        return false;
                    });
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    console.log('Address added:', result.value);
                }
            });
        }
    </script>
    <!-- edit address -->
    <!-- <script>
        function showEditAddressForm(address) {
            if (typeof address === "string") {
                address = JSON.parse(address);
            }

            Swal.fire({
                title: 'Edit Address',
                html: `
                <form id="addressForm" class="swal2-form" style="display: flex; flex-direction: column; gap: 15px;">
                    <label for="name">Name</label>
                    <input type="text" id="name" class="swal2-input" value="${address.name || ''}" required style="padding: 10px;">

                    <label for="email">Email</label>
                    <input type="email" id="email" class="swal2-input" value="${address.email || ''}" required style="padding: 10px;">

                    <label for="mobile">Mobile</label>
                    <input type="number" id="mobile" class="swal2-input" value="${address.mobile || ''}" pattern="[0-9]{10}" required style="padding: 10px;">

                    <label for="pin">PIN</label>
                    <input type="text" id="pin" class="swal2-input" value="${address.pin || ''}" pattern="[0-9]{6}" required style="padding: 10px;">

                    <label for="address">Address</label>
                    <textarea id="address" class="swal2-textarea" required style="padding: 10px;">${address.address || ''}</textarea>

                    <label for="city">City</label>
                    <input type="text" id="city" class="swal2-input" value="${address.city || ''}" required style="padding: 10px;">

                    <label for="state">State</label>
                    <input type="text" id="state" class="swal2-input" value="${address.state || ''}" required style="padding: 10px;">

                    <div style="display: flex; gap: 10px;">
                        <label for="isHome"><input type="radio" name="addressType" value="is_home" id="isHome" class="swal2-radio" ${address.addressType === 'is_home' ? 'checked' : ''} required> Home</label>
                        <label for="isWork"><input type="radio" name="addressType" value="is_work" id="isWork" class="swal2-radio" ${address.addressType === 'is_work' ? 'checked' : ''} required> Work</label>
                    </div>
                </form>`,
                showCancelButton: true,
                confirmButtonText: 'Edit',
                cancelButtonText: 'Cancel',
                focusConfirm: false,
                allowOutsideClick: false,
                preConfirm: () => {
                    const form = document.getElementById('addressForm');

                    const name = form.name.value.trim();
                    const email = form.email.value.trim();
                    const mobile = form.mobile.value.trim();
                    const pin = form.pin.value.trim();
                    const address = form.address.value.trim();
                    const city = form.city.value.trim();
                    const state = form.state.value.trim();
                    const addressType = form.addressType.value;

                    if (!name || !email || !mobile || !pin || !address || !city || !state || !addressType) {
                        Swal.showValidationMessage('Please fill in all required fields.');
                        return false;
                    }

                    if (!/^[a-zA-Z\s]+$/.test(name)) {
                        Swal.showValidationMessage('Name can only contain letters and spaces.');
                        return false;
                    }

                    if (!/\S+@\S+\.\S+/.test(email)) {
                        Swal.showValidationMessage('Please enter a valid email address.');
                        return false;
                    }

                    if (!/^\d{10}$/.test(mobile)) {
                        Swal.showValidationMessage('Mobile number must be 10 digits.');
                        return false;
                    }

                    if (!/^\d{6}$/.test(pin)) {
                        Swal.showValidationMessage('PIN must be 6 digits.');
                        return false;
                    }

                    const formData = {
                        name,
                        email,
                        mobile,
                        pin,
                        address,
                        city,
                        state,
                        is_Home: addressType === 'is_home',
                        is_Work: addressType === 'is_work'
                    };

                    return fetch('/add-address', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(formData)
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.status) {
                            Swal.fire({
                                title: 'Updated Successfully!',
                                text: data.message,
                                icon: 'success',
                                timer: 3000,
                                showConfirmButton: true,
                                confirmButtonColor: '#28a745' // green
                            })
                        } else {
                            Swal.fire({
                                title: 'Update Failed',
                                text: data.message,
                                icon: 'error',
                                confirmButtonColor: '#d33' // red
                            })
                        }
                    })
                    .catch(error => {
                        Swal.showValidationMessage(error.message);
                        return false;
                    });
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    console.log('Address added:', result.value);
                }
            });
        }
    </script> -->

    <script>
        function validateForm(i) {
            var name = document.getElementById("name_" + i).value.trim();
            var email = document.getElementById("email_" + i).value.trim();
            var mobile = document.getElementById("mobile_" + i).value.trim();
            var address = document.getElementById("address_" + i).value.trim();
            var city = document.getElementById("city_" + i).value.trim();
            var state = document.getElementById("state_" + i).value.trim();
            var pin = document.getElementById("pin_" + i).value.trim();
            var isHomeChecked = document.getElementById("isHome_" + i).checked;
            var isWorkChecked = document.getElementById("isWork_" + i).checked;

            console.log('suiuiuiuiu' ,name, email);

            var isValid = true;

            if (name.length < 3 || !/^[a-zA-Z]+$/.test(name)) {
                document.getElementById("nameError_" + i).style.display = "block";
                isValid = false;
            } else {
                document.getElementById("nameError_" + i).style.display = "none";
            }


            return isValid;
        }

        function handleSubmit(i) {
            if (validateForm(i)) {
                document.getElementById("userForm_" + i).submit();
            } else {
                return false;
            }
        }

        // for (var i = 0; i < addressData.user_address.length; i++) {
        //     document.getElementById("userForm_" + i).addEventListener("submit", function(event) {
        //         event.preventDefault(); 
        //         handleSubmit(i); 
        //     });
        // }

    </script>
    <!-- delete address -->
    <script>
        function deleteAddress(addressIndex) {
            fetch('/delete-address', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ addressIndex: addressIndex })
            })
            .then(response => response.json())
            .then(data => {
                if (data.status) {
                    Swal.fire({
                        title: 'Updated Successfully!',
                        text: data.message,
                        icon: 'success',
                        timer: 3000,
                        showConfirmButton: true,
                        confirmButtonColor: '#28a745' // green
                    })
                    const addressElement = document.getElementById(`address-${addressIndex}`);
                    console.log(`Trying to remove element with ID: address-${addressIndex}`);
                    if (addressElement) {
                        addressElement.remove();
                        console.log("Element removed successfully");
                    } else {
                        console.log("Element not found");
                        setTimeout(function() {
                            window.location.reload();
                        }, 3000);
                    }
                } else {
                    Swal.fire({
                        title: 'Update Failed',
                        text: data.message,
                        icon: 'error',
                        confirmButtonColor: '#d33' // red
                    })
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert("An error occurred while deleting the address.");
            });
        }
    </script>
    


  
</body>

</html>

