<%- include('../layout/header.ejs') %>
    <!-- HEADER AREA END -->

    <div class="ltn__utilize-overlay"></div>

    <!-- BREADCRUMB AREA START -->
    <div class="ltn__breadcrumb-area ltn__breadcrumb-area-2 ltn__breadcrumb-color-white bg-overlay-theme-black-90 bg-image" data-bg="img/bg/9.jpg">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="ltn__breadcrumb-inner ltn__breadcrumb-inner-2 justify-content-between">
                        <div class="section-title-area ltn__section-title-2">
                            <h1 class="section-title white-color">Cart</h1>
                        </div>
                        <div class="ltn__breadcrumb-list">
                            <ul>
                                <li><a href="/">Home</a></li>
                                <li>Cart</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- BREADCRUMB AREA END -->

    <!-- SHOPING CART AREA START -->
    <div class="liton__shoping-cart-area mb-120">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="shoping-cart-inner">
                        <div class="shoping-cart-table table-responsive">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th class="cart-product-remove">Remove</th>
                                        <th class="cart-product-image">Image</th>
                                        <th class="cart-product-info">Product</th>
                                        <th class="cart-product-price">Price</th>
                                        <th class="cart-product-quantity">Quantity</th>
                                        <th class="cart-product-subtotal">Subtotal</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% if (cartData && cartData.products && cartData.products.length > 0) { %>
                                        <% cartData.products.forEach(product => { %>
                                          <tr data-product-id="<%= product.product_id._id %>">
                                            <td class="cart-product-remove">
                                              <button class="remove-product-btn" data-product-id="<%= product.product_id._id %>">x</button>
                                            </td>
                                            <td class="cart-product-image">
                                              <a href="/product-details?proId=<%= product.product_id._id %>"><img src="/productImage/<%= product.product_id.img[0] %>" alt="#"></a>
                                            </td>
                                            <td class="cart-product-info">
                                              <h4><a href="/product-details?proId=<%= product.product_id._id %>"><%= product.product_id.name %></a></h4>
                                            </td>
                                            <td class="cart-product-price">
                                              <% if (product.product_id.promoPrice > 0) { %>
                                                ₹<%= product.product_id.promoPrice %>
                                              <% } else { %>
                                                ₹<%= product.product_id.price %>
                                              <% } %>
                                            </td>
                                            <td class="cart-product-quantity">
                                                <div class="quantity-controls">
                                                    <button type="button" class="quantity-btn minus" data-product-id="<%= product.product_id._id %>">-</button>
                                                    <input value="<%= product.quantity %>" class="cart-plus-minus-box quantity-input" data-product-id="<%= product.product_id._id %>">
                                                    <button type="button" class="quantity-btn plus" data-product-id="<%= product.product_id._id %>">+</button>
                                                </div>
                                                
                                            </td>
                                            <td class="cart-product-subtotal">
                                              <% if (product.product_id.promoPrice > 0) { %>
                                                <span class="cart-subtotal">₹<%= product.product_id.promoPrice * product.quantity %></span>
                                              <% } else { %>
                                                <span class="cart-subtotal">₹<%= product.product_id.price * product.quantity %></span>
                                              <% } %>
                                            </td>
                                          </tr>
                                        <% }); %>
                                      <% } else { %>
                                        <tr>
                                          <td colspan="6">No products in the cart.</td>
                                        </tr>
                                      <% } %>
                                </tbody>
                            </table>
                                                                               
                        </div>
                        <div class="shoping-cart-total mt-50">
                            <h4>Cart Totals</h4>
                            <table class="table">
                                <tbody>
                                    <% let cartSubtotal = 0; %>
                                    <% if (cartData && cartData.products) { %>
                                        <% cartData.products.forEach(product => { %>
                                            <% const productPrice = product.product_id.promoPrice > 0 ? product.product_id.promoPrice : product.product_id.price; %>
                                            <% cartSubtotal += productPrice * product.quantity; %>
                                        <% }); %>
                                    <% } %>
                                
                                    <% let shippingCharge = 0; %>
                                    <% if (cartSubtotal < 200 && 0 < cartSubtotal) { %>
                                        <% shippingCharge = 30; %>
                                    <% } else if (cartSubtotal < 500 && 0 < cartSubtotal) { %>
                                        <% shippingCharge = 15; %>
                                    <% } %>
                                
                                    <tr>
                                        <td>Cart Subtotal</td>
                                        <td>₹<%= cartSubtotal.toFixed(2) %></td>    
                                    </tr>
                                    <tr>
                                        <td>Shipping and Handling</td>
                                        <td>₹<%= shippingCharge.toFixed(2) %></td>
                                    </tr>
                                    <tr>
                                        <td>VAT</td>
                                        <td>₹00.00</td>
                                    </tr>
                                    <tr>
                                        <td><strong>Order Total</strong></td>
                                        <td><strong>₹<%= (cartSubtotal + shippingCharge).toFixed(2) %></strong></td>
                                    </tr>
                                </tbody>
                                
                            </table>
                            <div class="btn-wrapper text-right text-end">
                                <a href="/checkout" class="theme-btn-1 btn btn-effect-1">Proceed to checkout</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- SHOPING CART AREA END -->

     <!-- footer -->
 <%- include('../layout/footer.ejs') %>
</div>
<!-- Body main wrapper end -->

    <!-- All JS Plugins -->
    <script src="js/plugins.js"></script>
    <!-- Main JS -->
    <script src="js/main.js"></script>
    <!-- update cart-->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const quantityInputs = document.querySelectorAll('.quantity-input');
            const updateCartButton = document.querySelector('.btn-update-cart');
            const removeProductButtons = document.querySelectorAll('.remove-product-btn');
            const quantityButtons = document.querySelectorAll('.quantity-btn');
    
            quantityInputs.forEach(input => {
                input.addEventListener('change', function() {
                    const product_id = this.getAttribute('data-product-id');
                    const quantity = parseInt(this.value);
                    updateCart(product_id, quantity);
                });
            });
    
            removeProductButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const product_id = this.getAttribute('data-product-id');
                    confirmRemoveProduct(product_id);
                });
            });
    
            quantityButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const input = this.parentNode.querySelector('.quantity-input');
                    const product_id = input.getAttribute('data-product-id');
                    let quantity = parseInt(input.value);
                    if (this.classList.contains('plus')) {
                        quantity++;
                    } else if (this.classList.contains('minus') && quantity > 1) {
                        quantity--;
                    }
                    input.value = quantity;
                    updateCart(product_id, quantity);
                });
            });
    
            async function updateCart(product_id, quantity) {
                try {
                    const response = await fetch('/update-cart', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ product_id, quantity })
                    });
    
                    if (response.ok) {
                        try {
                            const cartData = await response.json();
                            const productRow = document.querySelector(`.quantity-input[data-product-id="${product_id}"]`).closest('tr');
                            const subtotalCell = productRow.querySelector('.cart-subtotal');
                            subtotalCell.textContent = `₹${cartData.subtotal}`;

                            setTimeout(() => {
                                window.location.reload();
                            }, 500);
                        } catch (error) {
                            console.error('Failed to parse response:', error);
                            Swal.fire({
                                title: 'Error!',
                                text: 'There was an error updating the cart',
                                icon: 'error',
                                timer: 3000,
                                showConfirmButton: false,
                                timerProgressBar: true,
                                confirmButtonColor: '#dc3545'
                            });
                        }
                    } else {
                        const data = await response.json();
                        console.error('Failed to update cart');
                        Swal.fire({
                            title: 'Failed!',
                            text: data.message,
                            icon: 'error',
                            timer: 3000,
                            showConfirmButton: false,
                            timerProgressBar: true,
                            confirmButtonColor: '#dc3545'
                        }).then(() => {
                            window.location.reload();
                        });
                    }
                } catch (error) {
                    console.error('Error updating cart:', error);
                }
            }
    
            async function removeProduct(product_id) {
                try {
                    const response = await fetch('/remove-product', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ product_id, wishlist: false })
                    });
    
                    if (response.ok) {
                        const productRow = document.querySelector(`tr[data-product-id="${product_id}"]`);
                        productRow.remove();
                        Swal.fire({
                            title: 'Removed!',
                            text: 'Product removed from your cart',
                            icon: 'success',
                            timer: 3000,
                            showConfirmButton: false,
                            timerProgressBar: true,
                            confirmButtonColor: '#28a745'
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        console.error('Failed to remove product');
                    }
                } catch (error) {
                    console.error('Error removing product:', error);
                }
            }
    
            function confirmRemoveProduct(product_id) {
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'Do you really want to remove this product from your cart?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#28a745',
                    confirmButtonText: 'Yes, remove it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        removeProduct(product_id);
                    }
                });
            }
        });
    </script>
        
</body>
</html>

