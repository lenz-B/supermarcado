<%- include('../layout/header.ejs') %>
    
    <div class="ltn__utilize-overlay"></div>

    <!-- BREADCRUMB AREA START -->
    <div class="ltn__breadcrumb-area ltn__breadcrumb-area-2 ltn__breadcrumb-color-white bg-overlay-theme-black-90 bg-image" data-bg="img/bg/9.jpg">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="ltn__breadcrumb-inner ltn__breadcrumb-inner-2 justify-content-between">
                        <div class="section-title-area ltn__section-title-2">
                            <h1 class="section-title white-color">Order Details</h1>
                        </div>
                        <div class="ltn__breadcrumb-list">
                            <ul>
                                <li><a href="/">Home</a></li>
                                <li><a href="/my-account">My Account</a></li>
                                <li>Order Details</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- BREADCRUMB AREA END -->

 <!-- footer -->
 <%- include('../layout/footer.ejs') %>
</div>

<!-- Body main wrapper end -->

    <!-- All JS Plugins -->
    <script src="js/plugins.js"></script>
    <!-- Main JS -->
    <script src="js/main.js"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <script>
        function data(event){
            event.preventDefault()
            fetch('/logout',{
                method:'DELETE'
            }).then(res=>res.json()).then(data=>{
                if(data)window.location='/'
            })
        }
    </script>

    <script>
        function finishPayment(orderId) {
            fetch('/finish-payment', {
                method: 'POST',
                headers: {
                'Content-Type': 'application/json'
                },
                body: JSON.stringify({ orderId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.status) {
                const options = {
                    key: data.key_id,
                    amount: data.amount,
                    currency: 'INR',
                    name: 'Supermarcado',
                    description: 'Order Payment',
                    order_id: data.razorpay_id,
                    handler: async function (response) {
                    const captureResponse = await fetch('/capture-payment', {
                        method: 'POST',
                        headers: {
                        'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                        razorpay_payment_id: response.razorpay_payment_id,
                        razorpay_order_id: response.razorpay_order_id,
                        razorpay_signature: response.razorpay_signature,
                        placed_order_id: data.order_id
                        }),
                    });

                    const captureResult = await captureResponse.json();

                    if (captureResult.status) {
                        Swal.fire({
                        title: 'Payment Successful!',
                        text: 'Your payment has been processed successfully.',
                        icon: 'success',
                        confirmButtonText: 'OK',
                        confirmButtonColor: '#9fb500',
                        }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.reload();
                        }
                        });
                    } else {
                        Swal.fire({
                        title: 'Payment Verification Failed!',
                        text: 'Payment verification failed. Please contact support.',
                        icon: 'error',
                        confirmButtonText: 'OK',
                        });
                    }
                    },
                    prefill: {
                    name: data.user_address?.name || '',
                    email: data.user_address?.email || '',
                    contact: data.user_address?.mobile || '',
                    },
                    theme: {
                    color: '#3399cc',
                    },
                };

                const rzp = new Razorpay(options);
                rzp.open();
                } else {
                Swal.fire({
                    title: 'Error',
                    text: data.message,
                    icon: 'error',
                    confirmButtonColor: '#d33'
                });
                }
            })
            .catch(error => {
                Swal.fire({
                title: 'Error',
                text: 'An error occurred while processing your request.',
                icon: 'error',
                confirmButtonColor: '#d33'
                });
            });
            }    
    </script>
    


  
</body>

</html>

