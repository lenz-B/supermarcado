<%- include('../layout/header.ejs') %>
    <!-- HEADER AREA END -->
    <style>
        .error-message {
            color: red;
            font-size: 12px;
        }
        .invalid {
            border-color: red;
        }
        </style>
    
    <div class="ltn__utilize-overlay"></div>

    <!-- BREADCRUMB AREA START -->
    <div class="ltn__breadcrumb-area ltn__breadcrumb-area-2 ltn__breadcrumb-color-white bg-overlay-theme-black-90 bg-image" data-bg="img/bg/9.jpg">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="ltn__breadcrumb-inner ltn__breadcrumb-inner-2 justify-content-between">
                        <div class="section-title-area ltn__section-title-2">
                            <h1 class="section-title white-color">Checkout</h1>
                        </div>
                        <div class="ltn__breadcrumb-list">
                            <ul>
                                <li><a href="/">Home</a></li>
                                <li>Checkout</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- BREADCRUMB AREA END -->

    <!-- WISHLIST AREA START -->
    <div class="ltn__checkout-area mb-105">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="ltn__checkout-inner">
                        <!-- <div class="ltn__checkout-single-content ltn__returning-customer-wrap">
                            <h5>Returning customer? <a class="ltn__secondary-color" href="#ltn__returning-customer-login" data-bs-toggle="collapse">Click here to login</a></h5>
                            <div id="ltn__returning-customer-login" class="collapse ltn__checkout-single-content-info">
                                <div class="ltn_coupon-code-form ltn__form-box">
                                    <p>Please login your accont.</p>
                                    <form action="#" >
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="input-item input-item-name ltn__custom-icon">
                                                    <input type="text" name="ltn__name" placeholder="Enter your name">
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="input-item input-item-email ltn__custom-icon">
                                                    <input type="email" name="ltn__email" placeholder="Enter email address">
                                                </div>
                                            </div>
                                        </div>
                                        <button class="btn theme-btn-1 btn-effect-1 text-uppercase">Login</button>
                                        <label class="input-info-save mb-0"><input type="checkbox" name="agree"> Remember me</label>
                                        <p class="mt-30"><a href="register.html">Lost your password?</a></p>
                                    </form>
                                </div>
                            </div>
                        </div> -->
                        <div class="ltn__checkout-single-content ltn__coupon-code-wrap">
                            <h5>Have a coupon? <a class="ltn__secondary-color" href="#ltn__coupon-code" data-bs-toggle="collapse">Click here to enter your code</a></h5>
                            <div id="ltn__coupon-code" class="collapse ltn__checkout-single-content-info">
                                <div class="ltn__coupon-code-form">
                                    <p>If you have a coupon code, please apply it below.</p>
                                    <form action="#" >
                                        <input type="text" name="coupon-code" placeholder="Coupon code">
                                        <button class="btn theme-btn-2 btn-effect-2 text-uppercase">Apply Coupon</button>
                                    </form>
                                </div>
                            </div>
                            <div id="messageContainer"></div>
                        </div>
                        <div class="ltn__checkout-single-content mt-50">
                            <p>
                                <label class="input-info-save mb-0">
                                    <input type="checkbox" name="selectAddress" id="selectAddress" onclick="handleCheckbox(this)"> Select an address
                                </label>
                                <span class="error-message" id="agreeError"></span>
                            </p>
                            <div id="addressCardsContainer" style="display: none">
                                <div class="row">
                                    <% for (var i = 0; i < addressData.user_address.length; i++) { %>
                                    <div class="col-md-4 col-sm-6 col-12 learts-mb-30">
                                        <div class="card mb-3">
                                            <div class="card-body p-3">
                                                <address>
                                                    <p><strong><%= addressData.user_address[i].name %></strong></p>
                                                    <p>
                                                        <%= addressData.user_address[i].address %> <br>
                                                        <%= addressData.user_address[i].city %>, <%= addressData.user_address[i].state %> <br>
                                                        PIN: <%= addressData.user_address[i].pin %>
                                                    </p>
                                                    <p>Email: <%= addressData.user_address[i].email %> <br>
                                                        Mobile: <%= addressData.user_address[i].mobile %></p>
                                                </address>
                                                <div class="btn-wrapper nav">
                                                    <p>
                                                        <label>
                                                            <input type="radio" name="selectedAddress" value="<%= i %>">
                                                            Select Address
                                                        </label>
                                                    </p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <% } %>
                                </div>
                            </div>
                            <p>
                                <label class="input-info-save mb-0">
                                    <input type="checkbox" name="agree" id="agree" onclick="handleCheckbox(this)"> Add new address?
                                </label>
                                <span class="error-message" id="agreeError"></span>
                            </p>
                            <div class="ltn__checkout-single-content-info" id="addressFormContainer" style="display: none;">
                                <h4 class="title-2">Add New Address</h4>
                                <form action="#" id="orderForm">
                                    <h6>Personal Information</h6>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="input-item input-item-name ltn__custom-icon">
                                                <input type="text" name="name" id="name" placeholder="Name" required>
                                                <span class="error-message" id="nameError"></span>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="input-item input-item-email ltn__custom-icon">
                                                <input type="email" name="email" id="email" placeholder="Email address" required>
                                                <span class="error-message" id="emailError"></span>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="input-item input-item-phone ltn__custom-icon">
                                                <input type="text" name="mobile" id="mobile" placeholder="Phone number" required>
                                                <span class="error-message" id="mobileError"></span>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="input-item input-item-website ltn__custom-icon">
                                                <input type="text" name="company" id="company" placeholder="Company name (optional)">
                                                <span class="error-message" id="companyError"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-lg-12 col-md-12">
                                            <h6>Address</h6>
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <div class="input-item">
                                                        <input type="text" name="address" id="address" placeholder="House number and street name" required>
                                                        <span class="error-message" id="addressError"></span>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="input-item">
                                                        <input type="text" name="apartment" id="apartment" placeholder="Apartment, suite, unit etc. (optional)">
                                                        <span class="error-message" id="apartmentError"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-4 col-md-6">
                                            <h6>Town / City</h6>
                                            <div class="input-item">
                                                <input type="text" name="city" id="city" placeholder="City" required>
                                                <span class="error-message" id="cityError"></span>
                                            </div>
                                        </div>
                                        <div class="col-lg-4 col-md-6">
                                            <h6>State</h6>
                                            <div class="input-item">
                                                <input type="text" name="state" id="state" placeholder="State" required>
                                                <span class="error-message" id="stateError"></span>
                                            </div>
                                        </div>
                                        <div class="col-lg-4 col-md-6">
                                            <h6>Pin Code</h6>
                                            <div class="input-item">
                                                <input type="text" name="pin" id="pin" placeholder="Pin Code" required>
                                                <span class="error-message" id="pinError"></span>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div style="display: flex; gap: 10px;">
                                                <label>
                                                    <input type="radio" name="addressType" value="is_home" id="isHome" required> Home
                                                </label>
                                                <label>
                                                    <input type="radio" name="addressType" value="is_work" id="isWork" required> Work
                                                </label>
                                                <span class="error-message" id="addressTypeError"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div>
                                        <button class="btn theme-btn-1 btn-effect-1 text-uppercase" id="placeOrderButton" type="submit">Add Address</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="ltn__checkout-payment-method mt-50">
                        <h4 class="title-2">Payment Method</h4>
                        <div id="checkout_accordion_1">
                            <!-- card -->
                            <div class="card">
                                <h5 class="ltn__card-title" data-bs-toggle="collapse" data-bs-target="#faq-item-2-2" aria-expanded="false"> 
                                    <input type="radio" id="cash_on_delivery" name="payment_method" value="cash_on_delivery">
                                    <label for="cash_on_delivery">
                                    Cash on delivery <img src="img/icons/cash.png" alt="#">
                                    </label>
                                </h5>
                                <div id="faq-item-2-2" class="collapse" data-parent="#checkout_accordion_1">
                                    <div class="card-body">
                                        <p>Pay with cash upon delivery.</p>
                                    </div>
                                </div>
                            </div>                             
                            <!-- card -->
                            <div class="card">
                                <h5 class="collapsed ltn__card-title" data-bs-toggle="collapse" data-bs-target="#faq-item-2-3" aria-expanded="false" >
                                    <input type="radio" id="razorpay" name="payment_method" value="razorpay">
                                    <label for="razorpay">
                                        Razorpay <img src="img/icons/razorpay_logo.png" alt="#">
                                    </label>
                                </h5>
                                <div id="faq-item-2-3" class="collapse" data-parent="#checkout_accordion_1">
                                    <div class="card-body">
                                        <p>Pay via Razorpay; you can pay with your credit card if you don’t have a PayPal account.</p>
                                    </div>
                                </div>
                            </div>
                             <!-- card -->
                             <div class="card">
                                <h5 class="collapsed ltn__card-title" data-bs-toggle="collapse" data-bs-target="#faq-item-2-4" aria-expanded="false" >
                                    <input type="radio" id="wallet" name="payment_method" value="wallet">
                                    <label for="wallet">
                                        Wallet <img src="img/icons/wallet.png" alt="#">
                                    </label>                                </h5>
                                <div id="faq-item-2-4" class="collapse" data-parent="#checkout_accordion_1">
                                    <div class="card-body">
                                        <p>wallet is the modern way to pay.</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="ltn__payment-note mt-30 mb-30">
                            <p>Your personal data will be used to process your order, support your experience throughout this website, and for other purposes described in our privacy policy.</p>
                        </div>
                        <button class="btn theme-btn-1 btn-effect-1 text-uppercase" id="paymentBtn" type="submit">Place order</button>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="shoping-cart-total mt-50">
                        <h4 class="title-2">Cart Totals</h4>
                        <table class="table">
                            <tbody>
                                <% if (cartData && cartData.products) { %>
                                    <% cartData.products.forEach(cart => { %>
                                        <tr>
                                            <td><%= cart.product_id.name %> <strong>× <%= cart.quantity %></strong></td>
                                            <td>$<%= cart.product_id.price * cart.quantity %></td>
                                        </tr>
                                    <% }); %>
                                <% } %>
                                <tr>
                                    <td>Shipping and Handing</td>
                                    <td>$15.00</td>
                                </tr>
                                <tr>
                                    <td>Vat</td>
                                    <td>$00.00</td>
                                </tr>
                                <tr>
                                    <td><strong>Order Total</strong></td>
                                    <td><strong>$<%= orderTotal %></strong></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- WISHLIST AREA START -->

    <!-- FEATURE AREA START ( Feature - 3) -->
    <div class="ltn__feature-area before-bg-bottom-2 mb--30--- plr--5">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-12">
                    <div class="ltn__feature-item-box-wrap ltn__border-between-column white-bg">
                        <div class="row">
                            <div class="col-xl-3 col-md-6 col-12">
                                <div class="ltn__feature-item ltn__feature-item-8">
                                    <div class="ltn__feature-icon">
                                        <img src="img/icons/icon-img/11.png" alt="#">
                                    </div>
                                    <div class="ltn__feature-info">
                                        <h4>Curated Products</h4>
                                        <p>Provide Curated Products for
                                            all product over $100</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xl-3 col-md-6 col-12">
                                <div class="ltn__feature-item ltn__feature-item-8">
                                    <div class="ltn__feature-icon">
                                        <img src="img/icons/icon-img/12.png" alt="#">
                                    </div>
                                    <div class="ltn__feature-info">
                                        <h4>Handmade</h4>
                                        <p>We ensure the product quality
                                            that is our main goal</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xl-3 col-md-6 col-12">
                                <div class="ltn__feature-item ltn__feature-item-8">
                                    <div class="ltn__feature-icon">
                                        <img src="img/icons/icon-img/13.png" alt="#">
                                    </div>
                                    <div class="ltn__feature-info">
                                        <h4>Natural Food</h4>
                                        <p>Return product within 3 days
                                            for any product you buy</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xl-3 col-md-6 col-12">
                                <div class="ltn__feature-item ltn__feature-item-8">
                                    <div class="ltn__feature-icon">
                                        <img src="img/icons/icon-img/14.png" alt="#">
                                    </div>
                                    <div class="ltn__feature-info">
                                        <h4>Free home delivery</h4>
                                        <p>We ensure the product quality
                                            that you can trust easily</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- FEATURE AREA END -->

    <!-- FOOTER AREA START -->
     <!-- footer -->
     <%- include('../layout/footer.ejs') %>
    <!-- FOOTER AREA END -->
</div>
<!-- Body main wrapper end -->
 
<!--================End Checkout Area =================-->

    <!-- All JS Plugins -->
    <script src="js/plugins.js"></script>
    <!-- Main JS -->
    <script src="js/main.js"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <!-- form validation and add address  -->
    <script>
        document.getElementById('placeOrderButton').addEventListener('click', async function(event) {
            event.preventDefault();
            let isValid = true;
    
            const isCheckboxChecked = document.getElementById('agree').checked;
            const checkboxError = document.getElementById('agreeError');
            if (!isCheckboxChecked) {
                return;
            } else {
                checkboxError.textContent = '';
            }
    
            function hasConsecutiveSpaces(str) {
                return /\s{2,}/.test(str);
            }
    
            function isAlphabetic(str) {
                return /^[a-zA-Z\s]+$/.test(str);
            }
    
            const requiredFields = ['name', 'email', 'mobile', 'address', 'city', 'state', 'pin'];
            requiredFields.forEach(field => {
                const element = document.getElementById(field);
                const errorElement = document.getElementById(`${field}Error`);
                const value = element.value.trim();
                if (!value) {
                    isValid = false;
                    element.classList.add('invalid');
                    errorElement.textContent = `${field.charAt(0).toUpperCase() + field.slice(1)} is required.`;
                } else if (hasConsecutiveSpaces(value)) {
                    isValid = false;
                    element.classList.add('invalid');
                    errorElement.textContent = `${field.charAt(0).toUpperCase() + field.slice(1)} cannot have consecutive spaces.`;
                } else {
                    element.classList.remove('invalid');
                    errorElement.textContent = '';
                }
            });
    
            const name = document.getElementById('name').value.trim();
            const nameError = document.getElementById('nameError');
            if (name.length < 3) {
                isValid = false;
                document.getElementById('name').classList.add('invalid');
                nameError.textContent = 'Name must be at least 3 characters long.';
            }
    
            const pin = document.getElementById('pin').value.trim();
            const pinError = document.getElementById('pinError');
            if (!/^\d{6}$/.test(pin)) {
                isValid = false;
                document.getElementById('pin').classList.add('invalid');
                pinError.textContent = 'Invalid pin code.';
            }
    
            const city = document.getElementById('city').value.trim();
            const cityError = document.getElementById('cityError');
    
            const state = document.getElementById('state').value.trim();
            const stateError = document.getElementById('stateError');
            if (!isAlphabetic(state)) {
                isValid = false;
                document.getElementById('state').classList.add('invalid');
                stateError.textContent = 'State name must contain only letters and spaces.';
            }
    
            const isHomeChecked = document.getElementById('isHome').checked;
            const isWorkChecked = document.getElementById('isWork').checked;
            const address = document.getElementById('address').value.trim();
            const addressTypeError = document.getElementById('addressTypeError');
            if (!isHomeChecked && !isWorkChecked) {
                isValid = false;
                addressTypeError.textContent = 'Please select an address type.';
            } else {
                addressTypeError.textContent = '';
            }
    
            const email = document.getElementById('email').value;
            const emailError = document.getElementById('emailError');
            const emailPattern = /^[A-Za-z0-9]+(?:\.[A-Za-z0-9]+)*@[A-Za-z0-9-]+(?:\.[A-Za-z0-9-]+)*\.[A-Za-z]{2,4}$/;
            if (!emailPattern.test(email)) {
                isValid = false;
                document.getElementById('email').classList.add('invalid');
                emailError.textContent = 'Invalid email address.';
            } else {
                document.getElementById('email').classList.remove('invalid');
                emailError.textContent = '';
            }
    
            const mobile = document.getElementById('mobile').value;
            const mobileError = document.getElementById('mobileError');
            const phonePattern = /^(?!.*(\d)\1{9})\d{10}$/;
            if (!phonePattern.test(mobile)) {
                isValid = false;
                document.getElementById('mobile').classList.add('invalid');
                mobileError.textContent = 'Invalid phone number.';
            } else {
                document.getElementById('mobile').classList.remove('invalid');
                mobileError.textContent = '';
            }
    
            if (isValid) {
                const user_address = {
                    name,
                    email,
                    mobile,
                    pin,
                    address,
                    city,
                    state,
                };
                console.log(user_address);

                try {
                    fetch('/add-address', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(user_address)
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.status) {
                            Swal.fire({
                                title: 'Updated Successfully!',
                                text: data.message,
                                icon: 'success',
                                timer: 3000,
                                showConfirmButton: true,
                                confirmButtonColor: '#28a745' // green
                            }).then(() => {
                                window.location.reload();
                            });
                        } else {
                            Swal.fire({
                                title: 'Update Failed',
                                text: data.message,
                                icon: 'error',
                                confirmButtonColor: '#d33' // red
                            })
                        }
                    })
                    .catch(error => {
                        Swal.showValidationMessage(error.message);
                        return false;
                    });                    
                } catch (error) {
                    console.error('Error occurred:', error);
                    alert('An error occurred while processing your request. Please try again later.');
                }
    
                // try {
                //     fetch('/add-order', {
                //         method: 'POST',
                //         headers: {
                //             'Content-Type': 'application/json'
                //         },
                //         body: JSON.stringify({user_address, paymentMethod})
                //     })
                //     .then(response => response.json())
                //     .then(data => {
                //         if (data.status) {
                //             Swal.fire({
                //                 title: 'Updated Successfully!',
                //                 text: data.message,
                //                 icon: 'success',
                //                 timer: 3000,
                //                 showConfirmButton: true,
                //                 confirmButtonColor: '#28a745' // green
                //             });
                //         } else {
                //             Swal.fire({
                //                 title: 'Update Failed',
                //                 text: data.message,
                //                 icon: 'error',
                //                 confirmButtonColor: '#d33' // red
                //             });
                //         }
                //     })
                //     .catch(error => {
                //         Swal.showValidationMessage(error.message);
                //         return false;
                //     });
                // } catch (error) {
                //     console.error('Error occurred:', error);
                //     alert('An error occurred while processing your request. Please try again later.');
                // }
            } else {
                event.preventDefault();
            }
        });
    </script>
    <!-- place order -->
    <script>
        document.getElementById('paymentBtn').addEventListener('click', function(event) {
    event.preventDefault(); 

    const selectAddressCheckbox = document.getElementById('selectAddress');
    const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked');

    if (selectAddressCheckbox.checked && selectedAddress) {
        const addressIndex = selectedAddress.value;

        // Function to get the selected payment method
        function getSelectedPaymentMethod() {
            const paymentMethods = document.getElementsByName('payment_method');
            for (let method of paymentMethods) {
                if (method.checked) {
                    switch (method.value) {
                        case 'cash_on_delivery':
                            return 'Cash on delivery';
                        case 'razorpay':
                            return 'Razorpay';
                        case 'wallet':
                            return 'Wallet';
                        default:
                            return null;
                    }
                }
            }
            return null;
        }

        const paymentMethod = getSelectedPaymentMethod();
        if (!paymentMethod) {
            alert('Please select a payment method.');
            return;
        }

        fetch('/checkout', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ addressIndex, paymentMethod })
        })
        .then(response => response.json())
        .then(async data => {
            if (data.status) {
                if (paymentMethod === 'Razorpay') {
                    // Proceed with Razorpay payment
                    const options = {
                    key: data.key_id, // Razorpay key ID
                    amount: data.amount, // Amount in paise
                    currency: 'INR',
                    name: 'Supermarcado',
                    description: 'Order Payment',
                    order_id: data.razorpay_id, // Razorpay order ID
                    handler: async function (response) {
                        // Ensure response has the necessary fields
                        if (!response.razorpay_payment_id || !response.razorpay_order_id || !response.razorpay_signature) {
                        alert('Missing necessary payment response fields.');
                        return;
                        }

                        // Handle successful payment
                        const captureResponse = await fetch('/capture-payment', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            razorpay_payment_id: response.razorpay_payment_id,
                            razorpay_order_id: response.razorpay_order_id,
                            razorpay_signature: response.razorpay_signature,
                        }),
                        });

                        const captureResult = await captureResponse.json();

                        if (captureResult.status) {
                        console.log('Capture Result: ', captureResult.status);
                        alert('Payment successful and order updated!');
                        // Redirect to a success page or update the UI
                        window.location.href = '/';
                        } else {
                        alert('Payment verification failed. Please contact support.');
                        }
                    },
                    prefill: {
                        // Prefill customer details if available
                        name: data.user_address?.name || '',
                        email: data.user_address?.email || '',
                        contact: data.user_address?.phone || '',
                    },
                    theme: {
                        color: '#3399cc',
                    },
                    };


                    const rzp = new Razorpay(options);
                    rzp.open();
                } else if (paymentMethod === 'Wallet') {
                    // Handle Wallet payment method
                    Swal.fire({
                        title: 'Order Placed Successfully!',
                        text: 'Payment via Wallet has been successfully processed.',
                        icon: 'success',
                        timer: 3000,
                        showConfirmButton: true,
                        confirmButtonColor: '#28a745' // green
                    }).then((result) => {
                        window.location.href = '/';
                    });

                    setTimeout(() => {
                        window.location.href = '/';
                    }, 3000);
                } else {
                    Swal.fire({
                        title: 'Order Placed Successfully!',
                        text: data.message,
                        icon: 'success',
                        timer: 3000,
                        showConfirmButton: true,
                        confirmButtonColor: '#28a745' // green
                    }).then((result) => {
                        window.location.href = '/';
                    });

                    setTimeout(() => {
                        window.location.href = '/';
                    }, 3000);
                }
            } else {
                Swal.fire({
                    title: 'Order Creation Failed',
                    text: data.message,
                    icon: 'error',
                    confirmButtonColor: '#d33' // red
                });
            }
        })
        .catch(error => {
            Swal.fire({
                title: 'Error',
                text: error.message,
                icon: 'error',
                confirmButtonColor: '#d33' // red
            });
        });
    } else {
        Swal.fire({
            title: 'No Address Selected',
            text: 'Please select an address.',
            icon: 'warning',
            confirmButtonColor: '#ffc107' // yellow
        });
    }
});

    </script>

    <!-- <script>
        document.getElementById('paymentBtn').addEventListener('click', function(event) {
            event.preventDefault(); 
        
            const selectAddressCheckbox = document.getElementById('selectAddress');
            const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked');
        
            if (selectAddressCheckbox.checked && selectedAddress) {
                const addressIndex = selectedAddress.value;

                // Function to get the selected payment method
                function getSelectedPaymentMethod() {
                    const paymentMethods = document.getElementsByName('payment_method');
                    for (let method of paymentMethods) {
                        if (method.checked) {
                            return method.value === 'cash_on_delivery' ? 'Cash on delivery' : 'Razorpay';
                        }
                    }
                    return null;
                }

                const paymentMethod = getSelectedPaymentMethod();
                if (!paymentMethod) {
                    alert('Please select a payment method.');
                    return;
                }
        
                fetch('/checkout', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ addressIndex, paymentMethod })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.status) {
                        Swal.fire({
                            title: 'Address Selected Successfully!',
                            text: data.message,
                            icon: 'success',
                            timer: 3000,
                            showConfirmButton: true,
                            confirmButtonColor: '#28a745' // green
                        }).then((result) => {
                            window.location.href = '/';
                        });
        
                        setTimeout(() => {
                            window.location.href = '/';
                        }, 3000);
                    } else {
                        Swal.fire({
                            title: 'Address Selection Failed',
                            text: data.message,
                            icon: 'error',
                            confirmButtonColor: '#d33' // red
                        });
                    }
                })
                .catch(error => {
                    Swal.fire({
                        title: 'Error',
                        text: error.message,
                        icon: 'error',
                        confirmButtonColor: '#d33' // red
                    });
                });
            } else {
                Swal.fire({
                    title: 'No Address Selected',
                    text: 'Please select an address.',
                    icon: 'warning',
                    confirmButtonColor: '#ffc107' // yellow
                });
            }

            
            
        });
    </script> -->
    
  

    <!-- checkbox hide -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var agreeCheckbox = document.getElementById('agree');
            var formContainer = document.getElementById('addressFormContainer');
            agreeCheckbox.addEventListener('change', function() {
                if (this.checked) {
                    formContainer.style.display = 'block';
                } else {
                    formContainer.style.display = 'none';
                }
            });
    
            var selectAddressCheckbox = document.getElementById('selectAddress');
            var addressCardsContainer = document.getElementById('addressCardsContainer');
            selectAddressCheckbox.addEventListener('change', function() {
                if (this.checked) {
                    addressCardsContainer.style.display = 'block';
                } else {
                    addressCardsContainer.style.display = 'none';
                }
            });
    
            function handleCheckbox(checkbox) {
                var checkboxes = document.querySelectorAll('input[type="checkbox"]');
                checkboxes.forEach(function(cb) {
                    if (cb !== checkbox) {
                        cb.checked = false;
                        if (cb.id === 'agree') {
                            formContainer.style.display = 'none';
                        } else if (cb.id === 'selectAddress') {
                            addressCardsContainer.style.display = 'none';
                        }
                    }
                });
            }
    
            window.handleCheckbox = handleCheckbox;
        });
    </script>
    
</body>

</html>

